package domein;

import java.util.HashSet;
import java.util.Set;
import javax.swing.table.TableModel;

import domein.pattern.observer.Observer;
import domein.tableModel.SoortTableModel;


public class LeertrajectController extends Controller {
	private Manager manager;
	private Leertraject geselecteerdLeertraject;
	private Onderdeel geselecteerdOnderdeel;

	private Set<Observer> observers;
	
	public LeertrajectController(){
		setManager(new Manager());
		observers = new HashSet<>();
	}
	
	public Leertraject maakLeertrajectAan() {
		setGeselecteerdLeertraject(new Leertraject());
		return geselecteerdLeertraject;
	}

	public Leertraject kopieerLeertraject() {
		setGeselecteerdLeertraject(new Leertraject(geselecteerdLeertraject.getOnderdelenLijst()));
		return geselecteerdLeertraject;
	}

	public Onderdeel maakOnderdeelaan(String type){
		switch(type){
		case "Document" : return new Document();
		default : return null;
		}
	}
	
	public void verwijderOnderdeel(Onderdeel onderdeel) {
		geselecteerdLeertraject.verwijderOnderdeel(onderdeel);
	}
	
	public void linkOnderdeel(Onderdeel onderdeel){
		geselecteerdLeertraject.linkOnderdeel(onderdeel);
	}
	
	public void save(Object o){
		manager.save(o);
	}
	
	// TableModel methodes
	
	public TableModel geefTableModel(SoortTableModel soort){
		return TableModelFactory.createTableModel(soort, this);
	}
	
	// Observer & Subject methodes
	
	@Override
	public void addObserver(Observer o) {
		observers.add(o);
	}	
	
	@Override
	public void notifyObservers(Object object) {
		for(Observer o : observers)
			o.update(object);
	}

	@Override
	public void update(Object object) {
		if(object instanceof Leertraject) {
			geselecteerdLeertraject = (Leertraject) object;
			notifyObservers(object);
		} 
		if(object instanceof Onderdeel) {
			geselecteerdOnderdeel = (Onderdeel) object;
		}
	}
	
	// Getters & setters
	public Leertraject getGeselecteerdLeertraject() {
		return geselecteerdLeertraject;
	}

	public void setGeselecteerdLeertraject(Leertraject geselecteerdLeertraject) {
		this.geselecteerdLeertraject = geselecteerdLeertraject;
	}

	public Manager getManager() {
		return manager;
	}

	public void setManager(Manager manager) {
		this.manager = manager;
	}
	
	public Onderdeel getGeselecteerdOnderdeel() {
		return geselecteerdOnderdeel;
	}

	public void setGeselecteerdOnderdeel(Onderdeel geselecteerdOnderdeel) {
		this.geselecteerdOnderdeel = geselecteerdOnderdeel;
	}
}
